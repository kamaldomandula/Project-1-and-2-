"{ ""cells"": [ { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""3j0MgLTYS0kM"" }, ""source"": [ ""****Question 1: Prep the data in order to be ready to be fed to a model. Look for missing, null, NaN records.\n"", ""Find outliers."
"Transform data â€“ all entries should be numeric.****\n"", ""\n"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""ogmJl6HDpoEW"" }, ""source"": [ ""***Importing of Libraries***\n"", ""\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 1,"
"""metadata"": { ""id"": ""oe0cq2RmW7a2"" }, ""outputs"": [], ""source"": [ ""import numpy as np\n"", ""import pandas as pd\n"", ""import matplotlib.pyplot as plt"" ] }, { ""cell_type"": ""code"", ""execution_count"": 3, ""metadata"": {}, ""outputs"": [],"
"""source"": [ ""from sklearn.impute import SimpleImputer\n"", ""from sklearn.preprocessing import LabelEncoder, StandardScaler\n"", ""from sklearn.model_selection import train_test_split"" ] }, { ""cell_type"": ""markdown"","
"""metadata"": { ""id"": ""0PSFqJQ6XZ3j"" }, ""source"": [ ""***Extracting the Data File***"" ] }, { ""cell_type"": ""code"", ""execution_count"": 6, ""metadata"": { ""id"": ""drvVPo5YW-2K"" }, ""outputs"": [], ""source"": [ ""Dataset = \""telco-customer-"
"churn.csv\""\n"", ""dataset = pd.read_csv(Dataset)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 8, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 342 }, ""id"": ""GBh9EUAMXOXN"", ""outputId"": ""cc13ce1a-"
"a366-441b-b3e1-3db5da4a5cf3"" }, ""outputs"": [ { ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
""" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"customerID gender SeniorCitizen Partner Dependents tenure PhoneService MultipleLines InternetService OnlineSecurity ... DeviceProtection TechSupport StreamingTV StreamingMovies Contract PaperlessB"
"7590-                                                                                                    No phone                                                                                                                                                  Month-"
"0                  Female 0                      Yes        No                1         No                                     DSL                   No                    ... No                      No                 No                 No                                Yes"
"VHVEG                                                                                                    service                                                                                                                                                   to-month"
"5575-"
"1                 Male       0                  No         No                34        Yes                 No                 DSL                   Yes                   ... Yes                     No                 No                 No                       One year No"
"GNVDE"
"3668-                                                                                                                                                                                                                                                              Month-"
"2                 Male       0                  No         No                2         Yes                 No                 DSL                   Yes                   ... No                      No                 No                 No                                Yes"
"QPYBK                                                                                                                                                                                                                                                              to-month"
"7795-                                                                                                    No phone"
"3                 Male       0                  No         No                45        No                                     DSL                   Yes                   ... Yes                     Yes                No                 No                       One year No"
"CFOCW                                                                                                    service"
"9237-                                                                                                                                                                                                                                                              Month-"
"4                 Female 0                      No         No                2         Yes                 No                 Fiber optic           No                    ... No                      No                 No                 No                                Yes"
"HQITU                                                                                                                                                                                                                                                              to-month"
"\n"", """
""
"5 rows Ã— 21 columns"
""
"\n"", """
""" ], ""text/plain"": [ "" customerID gender SeniorCitizen Partner Dependents tenure PhoneService \\\n"", ""0 7590-VHVEG Female 0 Yes No 1 No \n"", ""1 5575-GNVDE Male 0 No No 34 Yes \n"", ""2 3668-QPYBK Male 0 No No 2"
"Yes \n"", ""3 7795-CFOCW Male 0 No No 45 No \n"", ""4 9237-HQITU Female 0 No No 2 Yes \n"", ""\n"", "" MultipleLines InternetService OnlineSecurity ... DeviceProtection \\\n"", ""0 No phone service DSL No ... No \n"", ""1 No DSL"
"Yes ... Yes \n"", ""2 No DSL Yes ... No \n"", ""3 No phone service DSL Yes ... Yes \n"", ""4 No Fiber optic No ... No \n"", ""\n"", "" TechSupport StreamingTV StreamingMovies Contract PaperlessBilling \\\n"", ""0 No No No Month-to-"
"month Yes \n"", ""1 No No No One year No \n"", ""2 No No No Month-to-month Yes \n"", ""3 Yes No No One year No \n"", ""4 No No No Month-to-month Yes \n"", ""\n"", "" PaymentMethod MonthlyCharges TotalCharges Churn \n"", ""0"
"Electronic check 29.85 29.85 No \n"", ""1 Mailed check 56.95 1889.5 No \n"", ""2 Mailed check 53.85 108.15 Yes \n"", ""3 Bank transfer (automatic) 42.30 1840.75 No \n"", ""4 Electronic check 70.70 151.65 Yes \n"", ""\n"", ""[5 rows x"
"21 columns]"" ] }, ""execution_count"": 8, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""dataset.head(5)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 10, ""metadata"": { ""colab"": { ""base_uri"":"
"""https://localhost:8080/"", ""height"": 342 }, ""id"": ""Zsbe3RdKYr8O"", ""outputId"": ""0702dee7-8106-477f-b755-8f3841a9fe9b"" }, ""outputs"": [ { ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
""" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"customerID gender SeniorCitizen Partner Dependents tenure PhoneService MultipleLines InternetService OnlineSecurity ... DeviceProtection TechSupport StreamingTV StreamingMovies Contract Paperle"
"6840-"
"7038                    Male       0                  Yes        Yes               24        Yes                 Yes                DSL                   Yes                   ... Yes                     Yes                Yes                Yes                      One year Yes"
"RESVB"
"2234-"
"7039                    Female 0                      Yes        Yes               72        Yes                 Yes                Fiber optic           No                    ... Yes                     No                 Yes                Yes                      One year Yes"
"XADUH"
"No phone                                                                                                                                                  Month-"
"7040 4801-JZAZL Female 0                              Yes        Yes               11        No                                     DSL                   Yes                   ... No                      No                 No                 No                                Yes"
"service                                                                                                                                                   to-month"
"8361-                                                                                                                                                                                                                                                             Month-"
"7041                    Male       1                  Yes        No                4         Yes                 Yes                Fiber optic           No                    ... No                      No                 No                 No                                Yes"
"LTMKD                                                                                                                                                                                                                                                             to-month"
"7042 3186-AJIEK Male               0                  No         No                66        Yes                 No                 Fiber optic           Yes                   ... Yes                     Yes                Yes                Yes                      Two year Yes"
"\n"", """
""
"5 rows Ã— 21 columns"
""
"\n"", """
""" ], ""text/plain"": [ "" customerID gender SeniorCitizen Partner Dependents tenure \\\n"", ""7038 6840-RESVB Male 0 Yes Yes 24 \n"", ""7039 2234-XADUH Female 0 Yes Yes 72 \n"", ""7040 4801-JZAZL Female 0 Yes Yes 11 \n"","
"""7041 8361-LTMKD Male 1 Yes No 4 \n"", ""7042 3186-AJIEK Male 0 No No 66 \n"", ""\n"", "" PhoneService MultipleLines InternetService OnlineSecurity ... \\\n"", ""7038 Yes Yes DSL Yes ... \n"", ""7039 Yes Yes Fiber optic No ... \n"""
"""7040 No No phone service DSL Yes ... \n"", ""7041 Yes Yes Fiber optic No ... \n"", ""7042 Yes No Fiber optic Yes ... \n"", ""\n"", "" DeviceProtection TechSupport StreamingTV StreamingMovies Contract \\\n"", ""7038 Yes Yes Yes"
"Yes One year \n"", ""7039 Yes No Yes Yes One year \n"", ""7040 No No No No Month-to-month \n"", ""7041 No No No No Month-to-month \n"", ""7042 Yes Yes Yes Yes Two year \n"", ""\n"", "" PaperlessBilling PaymentMethod"
"MonthlyCharges TotalCharges \\\n"", ""7038 Yes Mailed check 84.80 1990.5 \n"", ""7039 Yes Credit card (automatic) 103.20 7362.9 \n"", ""7040 Yes Electronic check 29.60 346.45 \n"", ""7041 Yes Mailed check 74.40 306.6 \n"","
"""7042 Yes Bank transfer (automatic) 105.65 6844.5 \n"", ""\n"", "" Churn \n"", ""7038 No \n"", ""7039 No \n"", ""7040 No \n"", ""7041 Yes \n"", ""7042 No \n"", ""\n"", ""[5 rows x 21 columns]"" ] }, ""execution_count"": 10, ""metadata"": {},"
"""output_type"": ""execute_result"" } ], ""source"": [ ""dataset.tail(5)"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""OvqMLAn6bZ_f"" }, ""source"": [ ""**Data Wrangling**"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"":"
"""qRcnNoVKa6Qi"" }, ""source"": [ ""**Handling Missing Data**"" ] }, { ""cell_type"": ""code"", ""execution_count"": 14, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""wdwPU4BbcIWY"", ""outputId"": ""2b70ca14-c1ad-"
"4d87-aca6-20b651b577cc"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""customerID\n"", ""0\n"", ""gender\n"", ""0\n"", ""SeniorCitizen\n"", ""0\n"", ""Partner\n"", ""0\n"", ""Dependents\n"", ""0\n"", ""tenure\n"", ""0\n"","
"""PhoneService\n"", ""0\n"", ""MultipleLines\n"", ""0\n"", ""InternetService\n"", ""0\n"", ""OnlineSecurity\n"", ""0\n"", ""OnlineBackup\n"", ""0\n"", ""DeviceProtection\n"", ""0\n"", ""TechSupport\n"", ""0\n"", ""StreamingTV\n"", ""0\n"", ""StreamingMovies\n"","
"""0\n"", ""Contract\n"", ""0\n"", ""PaperlessBilling\n"", ""0\n"", ""PaymentMethod\n"", ""0\n"", ""MonthlyCharges\n"", ""0\n"", ""TotalCharges\n"", ""0\n"", ""Churn\n"", ""0\n"" ] } ], ""source"": [ ""#Calculating the number of missing data in each column"
"and printing the same\n"", ""dataset.isnull().sum()\n"", ""for column in dataset.columns:\n"", "" print(column)\n"", "" print(dataset[column].isnull().sum())"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""GFgXH9wZLXsJ"" }, ""source"":"
"[ ""**Outliers**"" ] }, { ""cell_type"": ""code"", ""execution_count"": 17, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 569 }, ""id"": ""5w3qswCGpoEg"", ""outputId"": ""49fe1a57-ec57-4a74-d67f-5cc9e5a04b63"" },"
"""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAABKUAAAJOCAYAAABm7rQwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQG"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""import seaborn as sns\n"", ""\n"", ""# Plot boxplots for each numeric column\n"", ""plt.figure(figsize=(12, 6))\n"", ""\n"", ""plt.subplot(1, 3, 1)\n"","
"""sns.boxplot(dataset['tenure'])\n"", ""plt.title('Tenure')\n"", ""\n"", ""plt.subplot(1, 3, 2)\n"", ""sns.boxplot(dataset['MonthlyCharges'])\n"", ""plt.title('Monthly Charges')\n"", ""\n"", ""plt.subplot(1, 3, 3)\n"","
"""sns.boxplot(dataset['TotalCharges'])\n"", ""plt.title('Total Charges')\n"", ""\n"", ""plt.tight_layout()\n"", ""plt.show()"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""uXqW98fNllRU"" }, ""source"": [ ""**Question 2: Listing all"
"types of data, numeric, categorical, text**"" ] }, { ""cell_type"": ""code"", ""execution_count"": 19, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""rbkqWDk0ISdU"", ""outputId"": ""86cab1b9-a473-41f3-"
"8e2d-7287e3f87aee"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Numeric Columns: ['SeniorCitizen', 'tenure', 'MonthlyCharges']\n"", ""Categorical Columns: ['TotalCharges']\n"", ""Text Columns:"
"['customerID', 'gender', 'Partner', 'Dependents', 'PhoneService', 'MultipleLines', 'InternetService', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies', 'Contract',"
"'PaperlessBilling', 'PaymentMethod', 'Churn']\n"" ] } ], ""source"": [ ""# Identify numeric columns\n"", ""numeric_columns = dataset.select_dtypes(include=['int64', 'float64']).columns.tolist()\n"", ""\n"", ""# Identify categorical"
"columns (usually object type in pandas)\n"", ""categorical_columns = dataset.select_dtypes(include=['object']).columns.tolist()\n"", ""\n"", ""# If there are any text columns (which are also often 'object'), you can refine"
"them here\n"", ""# Check if any categorical columns are actually text\n"", ""text_columns = [col for col in categorical_columns if dataset[col].str.contains('[A-Za-z]', na=False).any()]\n"", ""\n"", ""# Now remove text"
"columns from categorical\n"", ""categorical_columns = [col for col in categorical_columns if col not in text_columns]\n"", ""\n"", ""# Display the lists\n"", ""print(\""Numeric Columns:\"", numeric_columns)\n"","
"""print(\""Categorical Columns:\"", categorical_columns)\n"", ""print(\""Text Columns:\"", text_columns)"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""hyEfzoOZpoEj"" }, ""source"": [ ""**Checking Data Format**"" ] }, {"
"""cell_type"": ""code"", ""execution_count"": 23, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 742 }, ""id"": ""tHF5vLG_Ekq5"", ""outputId"": ""aeb46d97-5b0b-405f-a71b-9e007a4065b8"" }, ""outputs"": [ {"
"""data"": { ""text/plain"": [ ""customerID object\n"", ""gender object\n"", ""SeniorCitizen int64\n"", ""Partner object\n"", ""Dependents object\n"", ""tenure int64\n"", ""PhoneService object\n"", ""MultipleLines object\n"","
"""InternetService object\n"", ""OnlineSecurity object\n"", ""OnlineBackup object\n"", ""DeviceProtection object\n"", ""TechSupport object\n"", ""StreamingTV object\n"", ""StreamingMovies object\n"", ""Contract object\n"","
"""PaperlessBilling object\n"", ""PaymentMethod object\n"", ""MonthlyCharges float64\n"", ""TotalCharges object\n"", ""Churn object\n"", ""dtype: object"" ] }, ""execution_count"": 23, ""metadata"": {}, ""output_type"":"
"""execute_result"" } ], ""source"": [ ""#Checking the data types for each column\n"", ""dataset.dtypes"" ] }, { ""cell_type"": ""code"", ""execution_count"": 40, ""metadata"": { ""id"": ""-SMUuyCsElE6"" }, ""outputs"": [ { ""name"": ""stdout"","
"""output_type"": ""stream"", ""text"": [ ""['gender', 'Partner', 'Dependents', 'PhoneService', 'PaperlessBilling', 'Churn']\n"", ""DataFrame columns: ['gender', 'Partner', 'Dependents', 'PhoneService', 'PaperlessBilling',"
"'Churn']\n"", "" gender Partner Dependents PhoneService PaperlessBilling Churn\n"", ""0 0 1 0 1 1 1\n"", ""1 1 0 1 0 0 0\n"", ""2 1 1 0 1 1 1\n"", ""3 0 0 1 0 0 0\n"" ] } ], ""source"": [ ""print(dataset.columns.tolist())\n"", ""\n"", ""#"
"Sample dataset creation\n"", ""data = {\n"", "" 'gender': ['Male', 'Female', 'Female', 'Male'],\n"", "" 'Partner': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'Dependents': ['No', 'Yes', 'No', 'Yes'],\n"", "" 'PhoneService': ['Yes', 'No', 'Yes',"
"'No'],\n"", "" 'PaperlessBilling': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'Churn': ['Yes', 'No', 'Yes', 'No']\n"", ""}\n"", ""dataset = pd.DataFrame(data)\n"", ""\n"", ""# Print the columns to verify\n"", ""print(\""DataFrame columns:\"","
"dataset.columns.tolist())\n"", ""\n"", ""# Convert binary columns to numeric\n"", ""binary_columns = ['gender', 'Partner', 'Dependents', 'PhoneService', 'PaperlessBilling', 'Churn']\n"", ""\n"", ""# Replace values using map\n"","
"""def replace_values(x):\n"", "" if x == 'Yes':\n"", "" return 1\n"", "" elif x == 'No':\n"", "" return 0\n"", "" elif x == 'Male':\n"", "" return 0\n"", "" elif x == 'Female':\n"", "" return 1\n"", "" return x # Return the original value for other"
"cases\n"", ""\n"", ""# Check if all columns exist before applying the function\n"", ""missing_columns = [col for col in binary_columns if col not in dataset.columns]\n"", ""if missing_columns:\n"", "" print(\""Missing columns:\"","
"missing_columns)\n"", ""else:\n"", "" # Use DataFrame.apply() to apply the function to each column\n"", "" dataset[binary_columns] = dataset[binary_columns].apply(lambda col: col.map(replace_values))\n"", ""\n"", ""#"
"Ensure the data types are correct by converting the columns explicitly (optional)\n"", ""dataset[binary_columns] = dataset[binary_columns].apply(pd.to_numeric)\n"", ""\n"", ""# Set the pandas option for future"
"behavior\n"", ""pd.set_option('future.no_silent_downcasting', True)\n"", ""\n"", ""# Display the modified dataset\n"", ""print(dataset)\n"", ""\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 48, ""metadata"": { ""id"":"
"""ij31L_mbFO06"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""DataFrame columns: ['gender', 'Partner', 'Dependents', 'PhoneService', 'PaperlessBilling', 'Churn', 'InternetService', 'Contract',"
"'PaymentMethod', 'MultipleLines', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies']\n"", "" gender Partner Dependents PhoneService PaperlessBilling Churn"
"\\\n"", ""0 Male Yes No Yes Yes Yes \n"", ""1 Female No Yes No No No \n"", ""2 Female Yes No Yes Yes Yes \n"", ""3 Male No Yes No No No \n"", ""\n"", "" InternetService Contract PaymentMethod MultipleLines"
"OnlineSecurity \\\n"", ""0 0 0 1 0 0 \n"", ""1 1 1 0 1 1 \n"", ""2 0 0 1 0 0 \n"", ""3 2 2 2 0 1 \n"", ""\n"", "" OnlineBackup DeviceProtection TechSupport StreamingTV StreamingMovies \n"", ""0 1 0 1 0 1 \n"", ""1 0 1 0 1 0 \n"", ""2 1 0 1"
"0 1 \n"", ""3 0 1 0 1 0 \n"" ] } ], ""source"": [ ""\n"", ""data = {\n"", "" 'gender': ['Male', 'Female', 'Female', 'Male'],\n"", "" 'Partner': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'Dependents': ['No', 'Yes', 'No', 'Yes'],\n"", "" 'PhoneService': ['Yes',"
"'No', 'Yes', 'No'],\n"", "" 'PaperlessBilling': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'Churn': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'InternetService': ['DSL', 'Fiber optic', 'DSL', 'No'],\n"", "" 'Contract': ['Month-to-month', 'One year', 'Month-to-"
"month', 'Two year'],\n"", "" 'PaymentMethod': ['Credit card (automatic)', 'Bank transfer (automatic)', 'Credit card (automatic)', 'Mailed check'],\n"", "" 'MultipleLines': ['No', 'Yes', 'No', 'No'],\n"", "" 'OnlineSecurity': ['No',"
"'Yes', 'No', 'Yes'],\n"", "" 'OnlineBackup': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'DeviceProtection': ['No', 'Yes', 'No', 'Yes'],\n"", "" 'TechSupport': ['Yes', 'No', 'Yes', 'No'],\n"", "" 'StreamingTV': ['No', 'Yes', 'No', 'Yes'],\n"", """
"'StreamingMovies': ['Yes', 'No', 'Yes', 'No']\n"", ""}\n"", ""dataset = pd.DataFrame(data)\n"", ""\n"", ""# Print the columns to verify\n"", ""print(\""DataFrame columns:\"", dataset.columns.tolist())\n"", ""\n"", ""# Convert categorical"
"columns to category codes\n"", ""categorical_columns = ['InternetService', 'Contract', 'PaymentMethod', 'MultipleLines',\n"", "" 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',\n"", "" 'StreamingTV',"
"'StreamingMovies']\n"", ""\n"", ""for column in categorical_columns:\n"", "" if column in dataset.columns:\n"", "" dataset[column] = dataset[column].astype('category').cat.codes\n"", "" else:\n"", "" print(f\""Column '{column}' not"
"found in DataFrame.\"")\n"", ""\n"", ""# Display the modified dataset\n"", ""print(dataset)\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 54, ""metadata"": { ""id"": ""6qiGCC3nFYqi"" }, ""outputs"": [ { ""name"": ""stdout"","
"""output_type"": ""stream"", ""text"": [ ""Column 'TotalCharges' not found in DataFrame.\n"" ] } ], ""source"": [ ""# Check if 'TotalCharges' exists before conversion\n"", ""if 'TotalCharges' in dataset.columns:\n"", """
"dataset['TotalCharges'] = pd.to_numeric(dataset['TotalCharges'], errors='coerce')\n"", ""else:\n"", "" print(\""Column 'TotalCharges' not found in DataFrame.\"")\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 56,"
"""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""qUL_f7ZxFibd"", ""outputId"": ""39dfcaf4-6e8f-408f-9662-bad2d24c9091"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""gender"
"object\n"", ""Partner object\n"", ""Dependents object\n"", ""PhoneService object\n"", ""PaperlessBilling object\n"", ""Churn object\n"", ""InternetService int8\n"", ""Contract int8\n"", ""PaymentMethod int8\n"", ""MultipleLines int8\n"","
"""OnlineSecurity int8\n"", ""OnlineBackup int8\n"", ""DeviceProtection int8\n"", ""TechSupport int8\n"", ""StreamingTV int8\n"", ""StreamingMovies int8\n"", ""dtype: object\n"" ] } ], ""source"": [ ""# Check the data types\n"","
"""print(dataset.dtypes)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 58, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 342 }, ""id"": ""FQfo-zPqFub4"", ""outputId"": ""0ff53f1a-9d87-4d42-ce41-"
"555ccc691a15"" }, ""outputs"": [ { ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"gender Partner Dependents PhoneService PaperlessBilling Churn InternetService Contract PaymentMethod MultipleLines OnlineSecurity OnlineBackup DeviceProtection TechSupport StreamingTV Stre"
"0 Male Yes             No                Yes                 Yes                     Yes 0                          0            1                       0                  0                    1                    0                        1                  0                  1"
"1 Female No            Yes               No                  No                      No       1                     1            0                       1                  1                    0                    1                        0                  1                  0"
"2 Female Yes           No                Yes                 Yes                     Yes 0                          0            1                       0                  0                    1                    0                        1                  0                  1"
"3 Male No              Yes               No                  No                      No       2                     2            2                       0                  1                    0                    1                        0                  1                  0"
"\n"", """
""" ], ""text/plain"": [ "" gender Partner Dependents PhoneService PaperlessBilling Churn \\\n"", ""0 Male Yes No Yes Yes Yes \n"", ""1 Female No Yes No No No \n"", ""2 Female Yes No Yes Yes Yes \n"", ""3 Male No Yes"
"No No No \n"", ""\n"", "" InternetService Contract PaymentMethod MultipleLines OnlineSecurity \\\n"", ""0 0 0 1 0 0 \n"", ""1 1 1 0 1 1 \n"", ""2 0 0 1 0 0 \n"", ""3 2 2 2 0 1 \n"", ""\n"", "" OnlineBackup DeviceProtection TechSupport"
"StreamingTV StreamingMovies \n"", ""0 1 0 1 0 1 \n"", ""1 0 1 0 1 0 \n"", ""2 1 0 1 0 1 \n"", ""3 0 1 0 1 0 "" ] }, ""execution_count"": 58, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""dataset.head(5)"" ] }, {"
"""cell_type"": ""code"", ""execution_count"": 60, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 325 }, ""id"": ""aRnzB1QkGAA0"", ""outputId"": ""b61f2128-7c31-4bcd-b56d-4c6d491984d0"" }, ""outputs"": ["
"{ ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"gender Partner Dependents PhoneService PaperlessBilling Churn InternetService Contract PaymentMethod MultipleLines OnlineSecurity OnlineBackup DeviceProtection TechSupport StreamingTV Stre"
"0 Male Yes             No          Yes             Yes                  Yes 0                  0          1                  0              0                1                0                   1               0               1"
"1 Female No            Yes         No              No                   No     1               1          0                  1              1                0                1                   0               1               0"
"2 Female Yes           No          Yes             Yes                  Yes 0                  0          1                  0              0                1                0                   1               0               1"
"3 Male No              Yes         No              No                   No     2               2          2                  0              1                0                1                   0               1               0"
"\n"", """
""" ], ""text/plain"": [ "" gender Partner Dependents PhoneService PaperlessBilling Churn \\\n"", ""0 Male Yes No Yes Yes Yes \n"", ""1 Female No Yes No No No \n"", ""2 Female Yes No Yes Yes Yes \n"", ""3 Male No Yes"
"No No No \n"", ""\n"", "" InternetService Contract PaymentMethod MultipleLines OnlineSecurity \\\n"", ""0 0 0 1 0 0 \n"", ""1 1 1 0 1 1 \n"", ""2 0 0 1 0 0 \n"", ""3 2 2 2 0 1 \n"", ""\n"", "" OnlineBackup DeviceProtection TechSupport"
"StreamingTV StreamingMovies \n"", ""0 1 0 1 0 1 \n"", ""1 0 1 0 1 0 \n"", ""2 1 0 1 0 1 \n"", ""3 0 1 0 1 0 "" ] }, ""execution_count"": 60, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""dataset.tail(5)"" ] }, {"
"""cell_type"": ""code"", ""execution_count"": 62, ""metadata"": { ""id"": ""a_q7pqghJmJ5"" }, ""outputs"": [], ""source"": [ ""for column in categorical_columns:\n"", "" dataset[column] = dataset[column].astype('category')"" ] }, {"
"""cell_type"": ""code"", ""execution_count"": 64, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""GaCBAG_MJ0el"", ""outputId"": ""be4a076d-6d1e-4ba6-9843-d43d47a5d1ef"" }, ""outputs"": [ { ""name"":"
"""stdout"", ""output_type"": ""stream"", ""text"": [ ""gender object\n"", ""Partner object\n"", ""Dependents object\n"", ""PhoneService object\n"", ""PaperlessBilling object\n"", ""Churn object\n"", ""InternetService category\n"", ""Contract"
"category\n"", ""PaymentMethod category\n"", ""MultipleLines category\n"", ""OnlineSecurity category\n"", ""OnlineBackup category\n"", ""DeviceProtection category\n"", ""TechSupport category\n"", ""StreamingTV"
"category\n"", ""StreamingMovies category\n"", ""dtype: object\n"" ] } ], ""source"": [ ""print(dataset.dtypes)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 66, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"":"
"""egigg2vuGB8I"", ""outputId"": ""8bf5d48d-384f-402f-b5e0-2b1b453fa4c3"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Numeric Columns: []\n"", ""Categorical Columns: ['InternetService',"
"'Contract', 'PaymentMethod', 'MultipleLines', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies']\n"", ""Text Columns: ['gender', 'Partner', 'Dependents',"
"'PhoneService', 'PaperlessBilling', 'Churn']\n"" ] } ], ""source"": [ ""# Identify numeric columns\n"", ""numeric_columns = dataset.select_dtypes(include=['int64', 'float64']).columns.tolist()\n"", ""\n"", ""# Identify categorical"
"columns (usually object type in pandas)\n"", ""categorical_columns = dataset.select_dtypes(include=['category']).columns.tolist()\n"", ""\n"", ""# If there are any text columns (which are also often 'object')\n"","
"""text_columns = dataset.select_dtypes(include=['object']).columns.tolist()\n"", ""\n"", ""# Display the lists\n"", ""print(\""Numeric Columns:\"", numeric_columns)\n"", ""print(\""Categorical Columns:\"","
"categorical_columns)\n"", ""print(\""Text Columns:\"", text_columns)"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""-PZAUfX8poEp"" }, ""source"": [ ""**Question 3: Perform EDA. Present dependencies and"
"correlations among the various features in the data.\n"", ""List the most important variables (Feature Importance) that will affect the target label.**"" ] }, { ""cell_type"": ""code"", ""execution_count"": 69, ""metadata"": {"
"""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 648 }, ""id"": ""8arx4aVpLP2b"", ""outputId"": ""ca278cc5-b01f-43c0-8f0d-f42483a967ec"" }, ""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAArwAAAIhCAYAAACsQmneAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAP"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""# Updated count plot with `hue` specified\n"", ""plt.figure(figsize=(8, 6))\n"", ""sns.countplot(data=dataset, x='Churn', hue='Churn',"
"palette='Set2', dodge=False, legend=False)\n"", ""plt.title('Count of Churn')\n"", ""plt.xlabel('Churn')\n"", ""plt.ylabel('Count')\n"", ""plt.show()\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 136, ""metadata"": {"
"""id"": ""hBSP2DDZMV5L"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Columns in the dataset: Index(['gender', 'TotalCharges', 'Churn'], dtype='object')\n"", ""Columns after stripping"
"whitespace: Index(['gender', 'TotalCharges', 'Churn'], dtype='object')\n"" ] } ], ""source"": [ ""# Check the columns in the dataset\n"", ""print(\""Columns in the dataset:\"", dataset.columns)\n"", ""\n"", ""# Strip"
"whitespace from column names\n"", ""dataset.columns = dataset.columns.str.strip()\n"", ""\n"", ""# Check again after stripping whitespace\n"", ""print(\""Columns after stripping whitespace:\"","
"dataset.columns)\n"", ""\n"", ""# Drop the 'customerID' column if it exists\n"", ""data_numeric = dataset.drop(columns=['customerID'], errors='ignore')\n"", ""\n"", ""# Continue with your analysis\n"" ] }, {"
"""cell_type"": ""code"", ""execution_count"": null, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 805 }, ""id"": ""TgWA4jrrLSZJ"", ""outputId"": ""d4bfa525-51e8-4c74-938d-4220c995e3a5"" },"
"""outputs"": [], ""source"": [ ""# Sample data creation (replace this with your actual data)\n"", ""np.random.seed(0)\n"", ""data_numeric = pd.DataFrame(np.random.rand(10, 5), columns=['A', 'B', 'C', 'D', 'E'])\n"","
"""\n"", ""corr = data_numeric.corr()\n"", ""\n"", ""plt.figure(figsize=(14, 10))\n"", ""\n"", ""heatmap = sns.heatmap(\n"", "" corr, \n"", "" annot=True, # Show correlation coefficients\n"", "" fmt=\"".2f\"", # Format to 2 decimal"
"places\n"", "" cmap='viridis', # Change color palette\n"", "" square=True, # Make squares\n"", "" linewidths=0.5, # Add lines between cells\n"", "" cbar_kws={\""shrink\"": .8} # Shrink color bar\n"", "")\n"", ""\n"","
"""plt.title('Custom Correlation Heatmap', fontsize=18)\n"", ""plt.xlabel('Features', fontsize=14)\n"", ""plt.ylabel('Features', fontsize=14)\n"", ""\n"", ""# Show the plot\n"", ""plt.show()\n"" ] }, { ""cell_type"": ""code"","
"""execution_count"": 78, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""LatlFPo1Lme3"", ""outputId"": ""deae98f5-1f3a-4cdf-e8eb-562b24f86e06"" }, ""outputs"": [ { ""name"": ""stdout"","
"""output_type"": ""stream"", ""text"": [ ""gender object\n"", ""TotalCharges float64\n"", ""Churn object\n"", ""dtype: object\n"", ""Column 'Churn' found.\n"" ] } ], ""source"": [ ""# Sample dataset creation\n"", ""data = {\n"", """
"'gender': ['Male', 'Female', 'Female', 'Male'],\n"", "" 'TotalCharges': ['29.85', '188.50', '108.15', '0.00'], # Example values\n"", "" 'Churn': ['Yes', 'No', 'Yes', 'No']\n"", ""}\n"", ""dataset = pd.DataFrame(data)\n"", ""\n"","
"""# Convert 'TotalCharges' to numeric\n"", ""dataset['TotalCharges'] = pd.to_numeric(dataset['TotalCharges'], errors='coerce')\n"", ""\n"", ""# Create a new DataFrame for numeric data\n"", ""data_numeric ="
"dataset.copy()\n"", ""\n"", ""# Print the data types of the new DataFrame\n"", ""print(data_numeric.dtypes)\n"", ""\n"", ""# Ensure 'Churn' is in the DataFrame\n"", ""if 'Churn' in data_numeric.columns:\n"", """
"print(\""Column 'Churn' found.\"")\n"", ""else:\n"", "" print(\""Column 'Churn' not found.\"")\n"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""Fk9-tifhVLgz"" }, ""source"": [ ""**Positive Correlations:"
"MonthlyCharges: 0.193; PaperlessBilling: 0.192; SeniorCitizen: 0.151**"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""Su2kGiZxVqhp"" }, ""source"": [ ""**Question 4: Split the dataset into training and"
"test datasets (80/20 ratio). Using SweetVizâ€™s â€˜compareâ€™\n"", ""command contrast the training vs test datasets on the target (â€˜churnâ€™)**"" ] }, { ""cell_type"": ""code"", ""execution_count"": 80,"
"""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""O3teDrL6Wdzk"", ""outputId"": ""189b8485-d0fb-4202-9f39-069b2de2f04a"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"","
"""text"": [ ""Requirement already satisfied: sweetviz in /opt/anaconda3/lib/python3.12/site-packages (2.3.1)\n"", ""Requirement already satisfied: pandas!=1.0.0,!=1.0.1,!=1.0.2,>=0.25.3 in"
"/opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (2.2.2)\n"", ""Requirement already satisfied: numpy>=1.16.0 in /opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (1.26.4)\n"","
"""Requirement already satisfied: matplotlib>=3.1.3 in /opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (3.8.4)\n"", ""Requirement already satisfied: tqdm>=4.43.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (4.66.4)\n"", ""Requirement already satisfied: scipy>=1.3.2 in /opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (1.13.1)\n"","
"""Requirement already satisfied: jinja2>=2.11.1 in /opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (3.1.4)\n"", ""Requirement already satisfied: importlib-resources>=1.2.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from sweetviz) (6.4.5)\n"", ""Requirement already satisfied: MarkupSafe>=2.0 in /opt/anaconda3/lib/python3.12/site-packages (from jinja2>=2.11.1-"
">sweetviz) (2.1.3)\n"", ""Requirement already satisfied: contourpy>=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz) (1.2.0)\n"", ""Requirement already satisfied:"
"cycler>=0.10 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz) (0.11.0)\n"", ""Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/lib/python3.12/site-"
"packages (from matplotlib>=3.1.3->sweetviz) (4.51.0)\n"", ""Requirement already satisfied: kiwisolver>=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz)"
"(1.4.4)\n"", ""Requirement already satisfied: packaging>=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz) (23.2)\n"", ""Requirement already satisfied: pillow>=8 in"
"/opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz) (10.3.0)\n"", ""Requirement already satisfied: pyparsing>=2.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from"
"matplotlib>=3.1.3->sweetviz) (3.0.9)\n"", ""Requirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.1.3->sweetviz) (2.9.0.post0)\n"","
"""Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,>=0.25.3->sweetviz) (2024.1)\n"", ""Requirement already satisfied:"
"tzdata>=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,>=0.25.3->sweetviz) (2023.3)\n"", ""Requirement already satisfied: six>=1.5 in"
"/opt/anaconda3/lib/python3.12/site-packages (from python-dateutil>=2.7->matplotlib>=3.1.3->sweetviz) (1.16.0)\n"", ""Note: you may need to restart the kernel to use updated packages.\n"" ] } ],"
"""source"": [ ""pip install sweetviz"" ] }, { ""cell_type"": ""code"", ""execution_count"": 82, ""metadata"": { ""id"": ""kqKEHH4eWZFZ"" }, ""outputs"": [], ""source"": [ ""import sweetviz as sv"" ] }, { ""cell_type"": ""code"","
"""execution_count"": 88, ""metadata"": { ""id"": ""cAwzn7gvM9Ny"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Total samples: 4\n"", ""Dataset is too small for stratified split. Consider using"
"cross-validation or a smaller test size.\n"", ""Training and testing sets created successfully.\n"" ] } ], ""source"": [ ""from sklearn.model_selection import train_test_split\n"", ""\n"", ""# Assuming X is your feature"
"set and y is the target variable\n"", ""X = dataset.drop(columns=['Churn']) # Features\n"", ""y = dataset['Churn'] # Target variable\n"", ""\n"", ""# Check the number of samples\n"", ""num_samples = len(y)\n"","
"""print(f\""Total samples: {num_samples}\"")\n"", ""\n"", ""# Adjust test_size based on the number of samples\n"", ""if num_samples >= 10: # Ensure there are enough samples for stratification\n"", "" X_train,"
"X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42, stratify=y)\n"", ""else:\n"", "" # If the dataset is too small, consider using a different approach\n"", "" print(\""Dataset is too"
"small for stratified split. Consider using cross-validation or a smaller test size.\"")\n"", "" X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)\n"", ""\n"", ""# Now proceed"
"with your analysis\n"", ""print(\""Training and testing sets created successfully.\"")\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 106, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"":"
"86, ""referenced_widgets"": [ ""392319b3d2284737968945c74aaee738"", ""adf47d8fe1a44438910dab93da3af3a3"", ""18a17a5153694c04a1211973adf2b4e7"", ""76c80851dac14372b90f646d63277498"","
"""1e9525c5ce3a4f16a4ff52b5e7d56753"", ""4e65381cdcb64f74b34ed2c4dcef6b81"", ""5a1c02a5c48044908469c53976657500"", ""633dc8cdcf274898bf36de6b0551b6b9"","
"""37c05e6e99f84fa9b87331a3f19e4d5b"", ""cf95639b4ea444bfbae919c824f667a1"", ""97d72fe0545b483ab4a2032efce9516d"" ] }, ""id"": ""ZMzT06UxWERV"", ""outputId"": ""6645a95d-cab5-4c92-b3da-"
"df143a67240b"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Churn\n"", ""Yes 2\n"", ""No 2\n"", ""Name: count, dtype: int64\n"", ""gender 0\n"", ""TotalCharges 0\n"", ""Churn 0\n"", ""dtype:"
"int64\n"", ""gender 0\n"", ""TotalCharges 0\n"", ""Churn 0\n"", ""dtype: int64\n"" ] }, { ""data"": { ""application/vnd.jupyter.widget-view+json"": { ""model_id"": ""51b00450335f4714a7e9e77a4f5e416c"", ""version_major"":"
"2, ""version_minor"": 0 }, ""text/plain"": [ "" | | [ 0%] 00:00 -> (? left)"" ] }, ""metadata"": {}, ""output_type"": ""display_data"" }, { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Report"
"sweetviz_comparison_report.html was generated! NOTEBOOK/COLAB USERS: the web browser MAY not pop up, regardless, the report IS saved in your notebook/colab files.\n"" ] } ], ""source"": [ ""\n"","
"""# Assuming 'dataset' is your DataFrame containing the data\n"", ""X = dataset.drop(columns=['Churn']) # Features\n"", ""y = dataset['Churn'] # Target variable\n"", ""\n"", ""# Check class distribution\n"","
"""print(y.value_counts())\n"", ""\n"", ""# Convert categorical target to numerical\n"", ""y = y.map({'Yes': 1, 'No': 0}) # Adjust based on your actual values\n"", ""\n"", ""# Split the dataset into training and testing"
"sets without stratification\n"", ""X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n"", ""\n"", ""# Combine the training and test data back with their respective labels\n"","
"""train_data = X_train.copy()\n"", ""train_data['Churn'] = y_train\n"", ""\n"", ""test_data = X_test.copy()\n"", ""test_data['Churn'] = y_test\n"", ""\n"", ""# Check for NaN values\n"", ""print(train_data.isnull().sum())\n"","
"""print(test_data.isnull().sum())\n"", ""\n"", ""# Ensure target variable is now numerical\n"", ""train_data['Churn'] = train_data['Churn'].astype(float)\n"", ""test_data['Churn'] = test_data['Churn'].astype(float)\n"","
"""\n"", ""# Create the comparison report using SweetViz\n"", ""comparison_report = sv.compare([train_data, \""Training Set\""], [test_data, \""Test Set\""], \""Churn\"")\n"", ""\n"", ""# Display the report in an HTML"
"file\n"", ""comparison_report.show_html(\""sweetviz_comparison_report.html\"")\n"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""rpeZzOC8aOdO"" }, ""source"": [ ""**Pandas Profiling**"" ] }, { ""cell_type"":"
"""code"", ""execution_count"": 108, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""EkHOz4NpaTt-"", ""outputId"": ""917da982-7eac-4a80-f55e-06d91a84e45e"" }, ""outputs"": [ { ""name"":"
"""stdout"", ""output_type"": ""stream"", ""text"": [ ""Requirement already satisfied: pandas-profiling in /opt/anaconda3/lib/python3.12/site-packages (3.2.0)\n"", ""Requirement already satisfied: joblib~=1.1.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (1.1.0)\n"", ""Requirement already satisfied: scipy>=1.4.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling)"
"(1.13.1)\n"", ""Requirement already satisfied: pandas!=1.0.0,!=1.0.1,!=1.0.2,!=1.1.0,>=0.25.3 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (2.2.2)\n"", ""Requirement already"
"satisfied: matplotlib>=3.2.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (3.8.4)\n"", ""Requirement already satisfied: pydantic>=1.8.1 in /opt/anaconda3/lib/python3.12/site-"
"packages (from pandas-profiling) (2.5.3)\n"", ""Requirement already satisfied: PyYAML>=5.0.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (6.0.1)\n"", ""Requirement already"
"satisfied: jinja2>=2.11.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (3.1.4)\n"", ""Requirement already satisfied: markupsafe~=2.1.1 in /opt/anaconda3/lib/python3.12/site-"
"packages (from pandas-profiling) (2.1.3)\n"", ""Collecting visions==0.7.4 (from visions[type_image_path]==0.7.4->pandas-profiling)\n"", "" Using cached visions-0.7.4-py3-none-any.whl.metadata (5.9"
"kB)\n"", ""Requirement already satisfied: numpy>=1.16.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (1.26.4)\n"", ""Requirement already satisfied: htmlmin>=0.1.12 in"
"/opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (0.1.12)\n"", ""Requirement already satisfied: missingno>=0.4.2 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-"
"profiling) (0.5.2)\n"", ""Requirement already satisfied: phik>=0.11.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (0.12.4)\n"", ""Requirement already satisfied: tangled-up-in-"
"unicode==0.2.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (0.2.0)\n"", ""Requirement already satisfied: requests>=2.24.0 in /opt/anaconda3/lib/python3.12/site-packages"
"(from pandas-profiling) (2.32.2)\n"", ""Requirement already satisfied: tqdm>=4.48.2 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (4.66.4)\n"", ""Requirement already satisfied:"
"seaborn>=0.10.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas-profiling) (0.13.2)\n"", ""Requirement already satisfied: multimethod>=1.4 in /opt/anaconda3/lib/python3.12/site-packages"
"(from pandas-profiling) (1.12)\n"", ""Requirement already satisfied: attrs>=19.3.0 in /opt/anaconda3/lib/python3.12/site-packages (from visions==0.7.4->visions[type_image_path]==0.7.4->pandas-"
"profiling) (23.1.0)\n"", ""Requirement already satisfied: networkx>=2.4 in /opt/anaconda3/lib/python3.12/site-packages (from visions==0.7.4->visions[type_image_path]==0.7.4->pandas-profiling)"
"(3.2.1)\n"", ""Requirement already satisfied: imagehash in /opt/anaconda3/lib/python3.12/site-packages (from visions[type_image_path]==0.7.4->pandas-profiling) (4.3.1)\n"", ""Requirement already"
"satisfied: Pillow in /opt/anaconda3/lib/python3.12/site-packages (from visions[type_image_path]==0.7.4->pandas-profiling) (10.3.0)\n"", ""Requirement already satisfied: contourpy>=1.0.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.2.0->pandas-profiling) (1.2.0)\n"", ""Requirement already satisfied: cycler>=0.10 in /opt/anaconda3/lib/python3.12/site-packages (from"
"matplotlib>=3.2.0->pandas-profiling) (0.11.0)\n"", ""Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.2.0->pandas-profiling)"
"(4.51.0)\n"", ""Requirement already satisfied: kiwisolver>=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.2.0->pandas-profiling) (1.4.4)\n"", ""Requirement already satisfied:"
"packaging>=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.2.0->pandas-profiling) (23.2)\n"", ""Requirement already satisfied: pyparsing>=2.3.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from matplotlib>=3.2.0->pandas-profiling) (3.0.9)\n"", ""Requirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/lib/python3.12/site-packages"
"(from matplotlib>=3.2.0->pandas-profiling) (2.9.0.post0)\n"", ""Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from"
"pandas!=1.0.0,!=1.0.1,!=1.0.2,!=1.1.0,>=0.25.3->pandas-profiling) (2024.1)\n"", ""Requirement already satisfied: tzdata>=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from"
"pandas!=1.0.0,!=1.0.1,!=1.0.2,!=1.1.0,>=0.25.3->pandas-profiling) (2023.3)\n"", ""Requirement already satisfied: annotated-types>=0.4.0 in /opt/anaconda3/lib/python3.12/site-packages (from"
"pydantic>=1.8.1->pandas-profiling) (0.6.0)\n"", ""Requirement already satisfied: pydantic-core==2.14.6 in /opt/anaconda3/lib/python3.12/site-packages (from pydantic>=1.8.1->pandas-profiling)"
"(2.14.6)\n"", ""Requirement already satisfied: typing-extensions>=4.6.1 in /opt/anaconda3/lib/python3.12/site-packages (from pydantic>=1.8.1->pandas-profiling) (4.11.0)\n"", ""Requirement already"
"satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/lib/python3.12/site-packages (from requests>=2.24.0->pandas-profiling) (2.0.4)\n"", ""Requirement already satisfied: idna<4,>=2.5 in"
"/opt/anaconda3/lib/python3.12/site-packages (from requests>=2.24.0->pandas-profiling) (3.7)\n"", ""Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/anaconda3/lib/python3.12/site-packages"
"(from requests>=2.24.0->pandas-profiling) (2.2.2)\n"", ""Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/lib/python3.12/site-packages (from requests>=2.24.0->pandas-profiling)"
"(2024.8.30)\n"", ""Requirement already satisfied: six>=1.5 in /opt/anaconda3/lib/python3.12/site-packages (from python-dateutil>=2.7->matplotlib>=3.2.0->pandas-profiling) (1.16.0)\n"", ""Requirement"
"already satisfied: PyWavelets in /opt/anaconda3/lib/python3.12/site-packages (from imagehash->visions[type_image_path]==0.7.4->pandas-profiling) (1.5.0)\n"", ""Using cached visions-0.7.4-py3-none-"
"any.whl (102 kB)\n"", ""Installing collected packages: visions\n"", "" Attempting uninstall: visions\n"", "" Found existing installation: visions 0.7.5\n"", "" Uninstalling visions-0.7.5:\n"", "" Successfully uninstalled"
"visions-0.7.5\n"", ""\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency"
"conflicts.\n"", ""ydata-profiling 4.12.0 requires visions[type_image_path]<0.7.7,>=0.7.5, but you have visions 0.7.4 which is incompatible.\u001b[0m\u001b[31m\n"", ""\u001b[0mSuccessfully installed"
"visions-0.7.4\n"", ""Note: you may need to restart the kernel to use updated packages.\n"" ] } ], ""source"": [ ""pip install pandas-profiling"" ] }, { ""cell_type"": ""code"", ""execution_count"": 109, ""metadata"": {"
"""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""S9Q_8YXZaYri"", ""outputId"": ""26a6336f-6a92-47d0-eeb5-dcfbf2cda161"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": ["
"""Requirement already satisfied: ydata-profiling in /opt/anaconda3/lib/python3.12/site-packages (4.12.0)\n"", ""Requirement already satisfied: scipy<1.14,>=1.4.1 in /opt/anaconda3/lib/python3.12/site-"
"packages (from ydata-profiling) (1.13.1)\n"", ""Requirement already satisfied: pandas!=1.4.0,<3,>1.1 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (2.2.2)\n"", ""Requirement"
"already satisfied: matplotlib<3.10,>=3.5 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (3.8.4)\n"", ""Requirement already satisfied: pydantic>=2 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (2.5.3)\n"", ""Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-"
"profiling) (6.0.1)\n"", ""Requirement already satisfied: jinja2<3.2,>=2.11.1 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (3.1.4)\n"", ""Collecting visions<0.7.7,>=0.7.5 (from"
"visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling)\n"", "" Using cached visions-0.7.6-py3-none-any.whl.metadata (11 kB)\n"", ""Requirement already satisfied: numpy<2.2,>=1.16.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (1.26.4)\n"", ""Requirement already satisfied: htmlmin==0.1.12 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling)"
"(0.1.12)\n"", ""Requirement already satisfied: phik<0.13,>=0.11.1 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (0.12.4)\n"", ""Requirement already satisfied: requests<3,>=2.24.0"
"in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (2.32.2)\n"", ""Requirement already satisfied: tqdm<5,>=4.48.2 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling)"
"(4.66.4)\n"", ""Requirement already satisfied: seaborn<0.14,>=0.10.1 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (0.13.2)\n"", ""Requirement already satisfied:"
"multimethod<2,>=1.4 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (1.12)\n"", ""Requirement already satisfied: statsmodels<1,>=0.13.2 in /opt/anaconda3/lib/python3.12/site-"
"packages (from ydata-profiling) (0.14.2)\n"", ""Requirement already satisfied: typeguard<5,>=3 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (4.3.0)\n"", ""Requirement already"
"satisfied: imagehash==4.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (4.3.1)\n"", ""Requirement already satisfied: wordcloud>=1.9.3 in /opt/anaconda3/lib/python3.12/site-"
"packages (from ydata-profiling) (1.9.3)\n"", ""Requirement already satisfied: dacite>=1.8 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (1.8.1)\n"", ""Requirement already satisfied:"
"numba<1,>=0.56.0 in /opt/anaconda3/lib/python3.12/site-packages (from ydata-profiling) (0.60.0)\n"", ""Requirement already satisfied: PyWavelets in /opt/anaconda3/lib/python3.12/site-packages (from"
"imagehash==4.3.1->ydata-profiling) (1.5.0)\n"", ""Requirement already satisfied: pillow in /opt/anaconda3/lib/python3.12/site-packages (from imagehash==4.3.1->ydata-profiling) (10.3.0)\n"","
"""Requirement already satisfied: MarkupSafe>=2.0 in /opt/anaconda3/lib/python3.12/site-packages (from jinja2<3.2,>=2.11.1->ydata-profiling) (2.1.3)\n"", ""Requirement already satisfied:"
"contourpy>=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5->ydata-profiling) (1.2.0)\n"", ""Requirement already satisfied: cycler>=0.10 in"
"/opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5->ydata-profiling) (0.11.0)\n"", ""Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/lib/python3.12/site-"
"packages (from matplotlib<3.10,>=3.5->ydata-profiling) (4.51.0)\n"", ""Requirement already satisfied: kiwisolver>=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5-"
">ydata-profiling) (1.4.4)\n"", ""Requirement already satisfied: packaging>=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5->ydata-profiling) (23.2)\n"", ""Requirement"
"already satisfied: pyparsing>=2.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5->ydata-profiling) (3.0.9)\n"", ""Requirement already satisfied: python-dateutil>=2.7 in"
"/opt/anaconda3/lib/python3.12/site-packages (from matplotlib<3.10,>=3.5->ydata-profiling) (2.9.0.post0)\n"", ""Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from numba<1,>=0.56.0->ydata-profiling) (0.43.0)\n"", ""Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from"
"pandas!=1.4.0,<3,>1.1->ydata-profiling) (2024.1)\n"", ""Requirement already satisfied: tzdata>=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from pandas!=1.4.0,<3,>1.1->ydata-profiling)"
"(2023.3)\n"", ""Requirement already satisfied: joblib>=0.14.1 in /opt/anaconda3/lib/python3.12/site-packages (from phik<0.13,>=0.11.1->ydata-profiling) (1.1.0)\n"", ""Requirement already satisfied:"
"annotated-types>=0.4.0 in /opt/anaconda3/lib/python3.12/site-packages (from pydantic>=2->ydata-profiling) (0.6.0)\n"", ""Requirement already satisfied: pydantic-core==2.14.6 in"
"/opt/anaconda3/lib/python3.12/site-packages (from pydantic>=2->ydata-profiling) (2.14.6)\n"", ""Requirement already satisfied: typing-extensions>=4.6.1 in /opt/anaconda3/lib/python3.12/site-packages"
"(from pydantic>=2->ydata-profiling) (4.11.0)\n"", ""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/lib/python3.12/site-packages (from requests<3,>=2.24.0->ydata-profiling)"
"(2.0.4)\n"", ""Requirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/lib/python3.12/site-packages (from requests<3,>=2.24.0->ydata-profiling) (3.7)\n"", ""Requirement already satisfied:"
"urllib3<3,>=1.21.1 in /opt/anaconda3/lib/python3.12/site-packages (from requests<3,>=2.24.0->ydata-profiling) (2.2.2)\n"", ""Requirement already satisfied: certifi>=2017.4.17 in"
"/opt/anaconda3/lib/python3.12/site-packages (from requests<3,>=2.24.0->ydata-profiling) (2024.8.30)\n"", ""Requirement already satisfied: patsy>=0.5.6 in /opt/anaconda3/lib/python3.12/site-packages"
"(from statsmodels<1,>=0.13.2->ydata-profiling) (0.5.6)\n"", ""Requirement already satisfied: attrs>=19.3.0 in /opt/anaconda3/lib/python3.12/site-packages (from visions<0.7.7,>=0.7.5-"
">visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling) (23.1.0)\n"", ""Requirement already satisfied: networkx>=2.4 in /opt/anaconda3/lib/python3.12/site-packages (from visions<0.7.7,>=0.7.5-"
">visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling) (3.2.1)\n"", ""Requirement already satisfied: six in /opt/anaconda3/lib/python3.12/site-packages (from patsy>=0.5.6->statsmodels<1,>=0.13.2-"
">ydata-profiling) (1.16.0)\n"", ""Using cached visions-0.7.6-py3-none-any.whl (104 kB)\n"", ""Installing collected packages: visions\n"", "" Attempting uninstall: visions\n"", "" Found existing installation: visions"
"0.7.4\n"", "" Uninstalling visions-0.7.4:\n"", "" Successfully uninstalled visions-0.7.4\n"", ""\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are"
"installed. This behaviour is the source of the following dependency conflicts.\n"", ""pandas-profiling 3.2.0 requires visions[type_image_path]==0.7.4, but you have visions 0.7.6 which is"
"incompatible.\u001b[0m\u001b[31m\n"", ""\u001b[0mSuccessfully installed visions-0.7.6\n"", ""zsh:1: 0.7.5, not found\n"" ] } ], ""source"": [ ""!pip install ydata-profiling\n"", ""!pip install visions>=0.7.5,<0.7.7\n"" ]"
"}, { ""cell_type"": ""code"", ""execution_count"": 112, ""metadata"": { ""id"": ""LOqadJgra_ZI"" }, ""outputs"": [], ""source"": [ ""from ydata_profiling import ProfileReport"" ] }, { ""cell_type"": ""code"", ""execution_count"": 114,"
"""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"", ""height"": 145, ""referenced_widgets"": [ ""9391e3c4c9b84a29a4426418adc7d9b5"", ""5bb7992f212b4c2a86b22f67953c2116"","
"""983ffdb56ede43009d23ef9ad7a81134"", ""d9455eb2aef5484caee94f50300606ca"", ""eb0d1ce5fb54475183399ff53202ceb1"", ""e20bac59e78546869b9bf7adb4ddb1c4"","
"""72eeaa03387847498b0761c0e04c061e"", ""2c5089aedfb34137834e274cac9e3210"", ""911a159a93134f059a79ae7ea7c99c86"", ""76d5ce2d58e94afc885e4273639e2090"","
"""a3c7a8dd9cc64d92a30ab755688824bb"", ""324b5534288d4b2ba57eefa2286ca368"", ""0ada02802f7f4fdb925f3297c9efb05e"", ""b5c6d915f6a74c0f97e907a18d265892"","
"""6e1aa8a148e74ad3b9169e694e03680e"", ""280d3f45a3184788877f3dec0d4f29cf"", ""1a69dfdcc22947da9928e18aa584c53a"", ""c506d787be274308a0077b6666472f62"","
"""2e54c7d3546c4a07aa8350a5d8d6471f"", ""acc8b3b4628f4362a305f867c6593046"", ""09a23ab82f2c4bc0a85875b2ebdf8e60"", ""76800c2ea6df44dda050e29d87b0502f"","
"""4cf78b40d31043d599e07b9d906d2268"", ""9dc5cbcecc7348ae8351c001c1fa8a76"", ""ed4119d211e94111a4c9867c0e7024fa"", ""04c1c78408ac40d28e461651e9e1e027"","
"""19e6dc486c21417e9e5922a56f2c9aca"", ""fe1115942a164f13b73192ce63e8f3ae"", ""fab5da440c4646d7a74d03597dc242b6"", ""e9ef0b5b96e44554b32b7935acabba81"","
"""f4d238083227482980639564ae5b8d9a"", ""1556e71cb9bb41f7ba07e6071218d199"", ""8444ab49ab6c4166b0b34381ca7d71de"", ""9f0af412b0134194a48bdaf6164b4ad8"","
"""3bb228cf61284945aafd70542dd631b3"", ""f40e63635149448abd9e1ac0dcb0d7d9"", ""221b88aa0dc04795a2eee38b81b05592"", ""22023d2acfff41e79b8f8f27006b9f6c"","
"""1e1a2a49b7e64b87b5e9331013fdafe9"", ""f521cdd2146e47a8805c86ab8ea99911"", ""ecee3aa5769a4d9b85bd6140e8fb90da"", ""4653f15239724e7b861a4b5152d33ea1"","
"""1b5d882152c541fdafbbb2f14cebc1d7"", ""bff7b3fb876449a5b843ed4988c9c9cc"" ] }, ""id"": ""Q_H2yqjgbGkW"", ""outputId"": ""b9b27702-3941-4307-b79e-17c0940e2fa2"" }, ""outputs"": [ { ""data"": {"
"""application/vnd.jupyter.widget-view+json"": { ""model_id"": ""61d2202a58ea40fb91634c328584fc87"", ""version_major"": 2, ""version_minor"": 0 }, ""text/plain"": [ ""Summarize dataset: 0%| | 0/5 [00:00=0.1.3 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipywidgets) (0.2.1)\n"", ""Requirement already satisfied: ipython>=6.1.0 in /opt/anaconda3/lib/python3.12/site-packages (from ipywidgets) (8.25.0)\n"","
"""Requirement already satisfied: traitlets>=4.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from ipywidgets) (5.14.3)\n"", ""Requirement already satisfied: widgetsnbextension~=4.0.12 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipywidgets) (4.0.13)\n"", ""Requirement already satisfied: jupyterlab-widgets~=3.0.12 in /opt/anaconda3/lib/python3.12/site-packages (from"
"ipywidgets) (3.0.13)\n"", ""Requirement already satisfied: decorator in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=6.1.0->ipywidgets) (5.1.1)\n"", ""Requirement already satisfied:"
"jedi>=0.16 in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=6.1.0->ipywidgets) (0.18.1)\n"", ""Requirement already satisfied: matplotlib-inline in /opt/anaconda3/lib/python3.12/site-"
"packages (from ipython>=6.1.0->ipywidgets) (0.1.6)\n"", ""Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=6.1.0-"
">ipywidgets) (3.0.43)\n"", ""Requirement already satisfied: pygments>=2.4.0 in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=6.1.0->ipywidgets) (2.15.1)\n"", ""Requirement already"
"satisfied: stack-data in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=6.1.0->ipywidgets) (0.2.0)\n"", ""Requirement already satisfied: pexpect>4.3 in /opt/anaconda3/lib/python3.12/site-"
"packages (from ipython>=6.1.0->ipywidgets) (4.8.0)\n"", ""Requirement already satisfied: parso<0.9.0,>=0.8.0 in /opt/anaconda3/lib/python3.12/site-packages (from jedi>=0.16->ipython>=6.1.0-"
">ipywidgets) (0.8.3)\n"", ""Requirement already satisfied: ptyprocess>=0.5 in /opt/anaconda3/lib/python3.12/site-packages (from pexpect>4.3->ipython>=6.1.0->ipywidgets) (0.7.0)\n"", ""Requirement"
"already satisfied: wcwidth in /opt/anaconda3/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=6.1.0->ipywidgets) (0.2.5)\n"", ""Requirement already satisfied: executing in"
"/opt/anaconda3/lib/python3.12/site-packages (from stack-data->ipython>=6.1.0->ipywidgets) (0.8.3)\n"", ""Requirement already satisfied: asttokens in /opt/anaconda3/lib/python3.12/site-packages (from"
"stack-data->ipython>=6.1.0->ipywidgets) (2.0.5)\n"", ""Requirement already satisfied: pure-eval in /opt/anaconda3/lib/python3.12/site-packages (from stack-data->ipython>=6.1.0->ipywidgets) (0.2.2)\n"","
"""Requirement already satisfied: six in /opt/anaconda3/lib/python3.12/site-packages (from asttokens->stack-data->ipython>=6.1.0->ipywidgets) (1.16.0)\n"", ""Requirement already satisfied: notebook in"
"/opt/anaconda3/lib/python3.12/site-packages (7.2.2)\n"", ""Requirement already satisfied: jupyter-server<3,>=2.4.0 in /opt/anaconda3/lib/python3.12/site-packages (from notebook) (2.14.1)\n"","
"""Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /opt/anaconda3/lib/python3.12/site-packages (from notebook) (2.27.3)\n"", ""Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from notebook) (4.2.5)\n"", ""Requirement already satisfied: notebook-shim<0.3,>=0.2 in /opt/anaconda3/lib/python3.12/site-packages (from notebook)"
"(0.2.3)\n"", ""Requirement already satisfied: tornado>=6.2.0 in /opt/anaconda3/lib/python3.12/site-packages (from notebook) (6.4.1)\n"", ""Requirement already satisfied: anyio>=3.1.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (4.2.0)\n"", ""Requirement already satisfied: argon2-cffi>=21.1 in /opt/anaconda3/lib/python3.12/site-packages"
"(from jupyter-server<3,>=2.4.0->notebook) (21.3.0)\n"", ""Requirement already satisfied: jinja2>=3.0.3 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook)"
"(3.1.4)\n"", ""Requirement already satisfied: jupyter-client>=7.4.4 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (8.6.0)\n"", ""Requirement already satisfied:"
"jupyter-core!=5.0.*,>=4.12 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (5.7.2)\n"", ""Requirement already satisfied: jupyter-events>=0.9.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (0.10.0)\n"", ""Requirement already satisfied: jupyter-server-terminals>=0.4.4 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (0.4.4)\n"", ""Requirement already satisfied: nbconvert>=6.4.4 in /opt/anaconda3/lib/python3.12/site-packages"
"(from jupyter-server<3,>=2.4.0->notebook) (7.10.0)\n"", ""Requirement already satisfied: nbformat>=5.3.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook)"
"(5.9.2)\n"", ""Requirement already satisfied: overrides>=5.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (7.4.0)\n"", ""Requirement already satisfied:"
"packaging>=22.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (23.2)\n"", ""Requirement already satisfied: prometheus-client>=0.9 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (0.14.1)\n"", ""Requirement already satisfied: pyzmq>=24 in /opt/anaconda3/lib/python3.12/site-packages (from"
"jupyter-server<3,>=2.4.0->notebook) (25.1.2)\n"", ""Requirement already satisfied: send2trash>=1.8.2 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook)"
"(1.8.2)\n"", ""Requirement already satisfied: terminado>=0.8.3 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (0.17.1)\n"", ""Requirement already satisfied:"
"traitlets>=5.6.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (5.14.3)\n"", ""Requirement already satisfied: websocket-client>=1.7 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook) (1.8.0)\n"", ""Requirement already satisfied: async-lru>=1.0.0 in /opt/anaconda3/lib/python3.12/site-packages"
"(from jupyterlab<4.3,>=4.2.0->notebook) (2.0.4)\n"", ""Requirement already satisfied: httpx>=0.25.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook) (0.27.0)\n"","
"""Requirement already satisfied: ipykernel>=6.5.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook) (6.28.0)\n"", ""Requirement already satisfied: jupyter-"
"lsp>=2.0.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook) (2.2.0)\n"", ""Requirement already satisfied: setuptools>=40.1.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook) (69.5.1)\n"", ""Requirement already satisfied: babel>=2.10 in /opt/anaconda3/lib/python3.12/site-packages (from"
"jupyterlab-server<3,>=2.27.1->notebook) (2.11.0)\n"", ""Requirement already satisfied: json5>=0.9.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook)"
"(0.9.6)\n"", ""Requirement already satisfied: jsonschema>=4.18.0 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook) (4.19.2)\n"", ""Requirement already"
"satisfied: requests>=2.31 in /opt/anaconda3/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook) (2.32.2)\n"", ""Requirement already satisfied: idna>=2.8 in"
"/opt/anaconda3/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook) (3.7)\n"", ""Requirement already satisfied: sniffio>=1.1 in /opt/anaconda3/lib/python3.12/site-"
"packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook) (1.3.0)\n"", ""Requirement already satisfied: argon2-cffi-bindings in /opt/anaconda3/lib/python3.12/site-packages (from argon2-"
"cffi>=21.1->jupyter-server<3,>=2.4.0->notebook) (21.2.0)\n"", ""Requirement already satisfied: pytz>=2015.7 in /opt/anaconda3/lib/python3.12/site-packages (from babel>=2.10->jupyterlab-"
"server<3,>=2.27.1->notebook) (2024.1)\n"", ""Requirement already satisfied: certifi in /opt/anaconda3/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook)"
"(2024.8.30)\n"", ""Requirement already satisfied: httpcore==1.* in /opt/anaconda3/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook) (1.0.2)\n"", ""Requirement already"
"satisfied: h11<0.15,>=0.13 in /opt/anaconda3/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook) (0.14.0)\n"", ""Requirement already satisfied:"
"appnope in /opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.1.3)\n"", ""Requirement already satisfied: comm>=0.1.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.2.1)\n"", ""Requirement already satisfied: debugpy>=1.6.5 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (1.6.7)\n"", ""Requirement already satisfied: ipython>=7.23.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (8.25.0)\n"", ""Requirement already satisfied: matplotlib-inline>=0.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.1.6)\n"", ""Requirement already satisfied: nest-asyncio in /opt/anaconda3/lib/python3.12/site-"
"packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (1.6.0)\n"", ""Requirement already satisfied: psutil in /opt/anaconda3/lib/python3.12/site-packages (from ipykernel>=6.5.0-"
">jupyterlab<4.3,>=4.2.0->notebook) (5.9.0)\n"", ""Requirement already satisfied: MarkupSafe>=2.0 in /opt/anaconda3/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0-"
">notebook) (2.1.3)\n"", ""Requirement already satisfied: attrs>=22.2.0 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook) (23.1.0)\n"","
"""Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook)"
"(2023.7.1)\n"", ""Requirement already satisfied: referencing>=0.28.4 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook) (0.30.2)\n"","
"""Requirement already satisfied: rpds-py>=0.7.1 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook) (0.10.6)\n"", ""Requirement"
"already satisfied: python-dateutil>=2.8.2 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-client>=7.4.4->jupyter-server<3,>=2.4.0->notebook) (2.9.0.post0)\n"", ""Requirement already"
"satisfied: platformdirs>=2.5 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook) (3.10.0)\n"", ""Requirement already satisfied: python-"
"json-logger>=2.0.4 in /opt/anaconda3/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (2.0.7)\n"", ""Requirement already satisfied: pyyaml>=5.3 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (6.0.1)\n"", ""Requirement already satisfied: rfc3339-validator in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (0.1.4)\n"", ""Requirement already satisfied: rfc3986-validator>=0.1.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (0.1.1)\n"", ""Requirement already satisfied: beautifulsoup4 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (4.12.3)\n"", ""Requirement already satisfied: bleach!=5.0.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (4.1.0)\n"", ""Requirement already satisfied: defusedxml in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (0.7.1)\n"", ""Requirement already satisfied: jupyterlab-pygments in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (0.1.2)\n"", ""Requirement already satisfied: mistune<4,>=2.0.3 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (2.0.4)\n"", ""Requirement already satisfied: nbclient>=0.5.0 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (0.8.0)\n"", ""Requirement already satisfied: pandocfilters>=1.4.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (1.5.0)\n"", ""Requirement already satisfied: pygments>=2.4.1 in"
"/opt/anaconda3/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (2.15.1)\n"", ""Requirement already satisfied: tinycss2 in /opt/anaconda3/lib/python3.12/site-"
"packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (1.2.1)\n"", ""Requirement already satisfied: fastjsonschema in /opt/anaconda3/lib/python3.12/site-packages (from"
"nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook) (2.16.2)\n"", ""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/lib/python3.12/site-packages (from requests>=2.31-"
">jupyterlab-server<3,>=2.27.1->notebook) (2.0.4)\n"", ""Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/anaconda3/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-"
"server<3,>=2.27.1->notebook) (2.2.2)\n"", ""Requirement already satisfied: ptyprocess in /opt/anaconda3/lib/python3.12/site-packages (from terminado>=0.8.3->jupyter-server<3,>=2.4.0->notebook)"
"(0.7.0)\n"", ""Requirement already satisfied: six>=1.9.0 in /opt/anaconda3/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (1.16.0)\n"","
"""Requirement already satisfied: webencodings in /opt/anaconda3/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook) (0.5.1)\n"", ""Requirement"
"already satisfied: decorator in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (5.1.1)\n"", ""Requirement already satisfied:"
"jedi>=0.16 in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.18.1)\n"", ""Requirement already satisfied: prompt-"
"toolkit<3.1.0,>=3.0.41 in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (3.0.43)\n"", ""Requirement already satisfied: stack-"
"data in /opt/anaconda3/lib/python3.12/site-packages (from ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.2.0)\n"", ""Requirement already satisfied: pexpect>4.3 in"
"/opt/anaconda3/lib/python3.12/site-packages (from ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (4.8.0)\n"", ""Requirement already satisfied: fqdn in"
"/opt/anaconda3/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (1.5.1)\n"", ""Requirement already satisfied:"
"isoduration in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (20.11.0)\n"", ""Requirement"
"already satisfied: jsonpointer>1.13 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (2.1)\n"","
"""Requirement already satisfied: uri-template in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook)"
"(1.3.0)\n"", ""Requirement already satisfied: webcolors>=1.11 in /opt/anaconda3/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-"
"server<3,>=2.4.0->notebook) (24.8.0)\n"", ""Requirement already satisfied: cffi>=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-"
"server<3,>=2.4.0->notebook) (1.16.0)\n"", ""Requirement already satisfied: soupsieve>1.2 in /opt/anaconda3/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-"
"server<3,>=2.4.0->notebook) (2.5)\n"", ""Requirement already satisfied: pycparser in /opt/anaconda3/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-"
"server<3,>=2.4.0->notebook) (2.21)\n"", ""Requirement already satisfied: parso<0.9.0,>=0.8.0 in /opt/anaconda3/lib/python3.12/site-packages (from jedi>=0.16->ipython>=7.23.1->ipykernel>=6.5.0-"
">jupyterlab<4.3,>=4.2.0->notebook) (0.8.3)\n"", ""Requirement already satisfied: wcwidth in /opt/anaconda3/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=7.23.1-"
">ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.2.5)\n"", ""Requirement already satisfied: arrow>=0.15.0 in /opt/anaconda3/lib/python3.12/site-packages (from isoduration-"
">jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook) (1.2.3)\n"", ""Requirement already satisfied: executing in /opt/anaconda3/lib/python3.12/site-"
"packages (from stack-data->ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.8.3)\n"", ""Requirement already satisfied: asttokens in /opt/anaconda3/lib/python3.12/site-"
"packages (from stack-data->ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (2.0.5)\n"", ""Requirement already satisfied: pure-eval in /opt/anaconda3/lib/python3.12/site-"
"packages (from stack-data->ipython>=7.23.1->ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook) (0.2.2)\n"", ""usage: jupyter [-h] [--version] [--config-dir] [--data-dir] [--runtime-dir]\n"", "" [--paths] [--"
"json] [--debug]\n"", "" [subcommand]\n"", ""\n"", ""Jupyter: Interactive Computing\n"", ""\n"", ""positional arguments:\n"", "" subcommand the subcommand to launch\n"", ""\n"", ""options:\n"", "" -h, --help show this help"
"message and exit\n"", "" --version show the versions of core jupyter packages and exit\n"", "" --config-dir show Jupyter config dir\n"", "" --data-dir show Jupyter data dir\n"", "" --runtime-dir show Jupyter"
"runtime dir\n"", "" --paths show all Jupyter paths. Add --json for machine-readable\n"", "" format.\n"", "" --json output paths as machine-readable json\n"", "" --debug output debug information about paths\n"","
"""\n"", ""Available subcommands: console dejavu events execute kernel kernelspec lab\n"", ""labextension labhub migrate nbconvert notebook qtconsole run server\n"", ""troubleshoot trust\n"", ""\n"", ""Jupyter"
"command `jupyter-nbextension` not found.\n"" ] } ], ""source"": [ ""# Create the profile report\n"", ""profile = ProfileReport(dataset, title=\""Telco Customer Churn - Pandas Profiling Report\"","
"explorative=True)\n"", ""\n"", ""# Save the report as an HTML file\n"", ""profile.to_file(\""ydata_profiling_report.html\"")\n"", ""!pip install --upgrade ipywidgets\n"", ""!pip install --upgrade notebook\n"", ""!jupyter"
"nbextension enable --py widgetsnbextension\n"", ""\n"" ] }, { ""cell_type"": ""code"", ""execution_count"": 116, ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""DataFrame"
"Columns: ['customerID', 'gender', 'SeniorCitizen', 'Partner', 'Dependents', 'tenure', 'PhoneService', 'MultipleLines', 'InternetService', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',"
"'StreamingTV', 'StreamingMovies', 'Contract', 'PaperlessBilling', 'PaymentMethod', 'MonthlyCharges', 'TotalCharges', 'Churn']\n"", ""Warning: Column 'another_categorical_column' not found in the"
"DataFrame.\n"", ""Missing values in the dataset:\n"", "" customerID 0\n"", ""SeniorCitizen 0\n"", ""Partner 0\n"", ""Dependents 0\n"", ""tenure 0\n"", ""PhoneService 0\n"", ""MultipleLines 0\n"", ""InternetService 0\n"","
"""OnlineSecurity 0\n"", ""OnlineBackup 0\n"", ""DeviceProtection 0\n"", ""TechSupport 0\n"", ""StreamingTV 0\n"", ""StreamingMovies 0\n"", ""Contract 0\n"", ""PaperlessBilling 0\n"", ""PaymentMethod 0\n"","
"""MonthlyCharges 0\n"", ""TotalCharges 0\n"", ""Churn 0\n"", ""gender_Female 0\n"", ""gender_Male 0\n"", ""dtype: int64\n"", ""Data after encoding:\n"", "" customerID SeniorCitizen Partner Dependents tenure"
"PhoneService \\\n"", ""0 7590-VHVEG 0 Yes No 1 No \n"", ""1 5575-GNVDE 0 No No 34 Yes \n"", ""2 3668-QPYBK 0 No No 2 Yes \n"", ""3 7795-CFOCW 0 No No 45 No \n"", ""4 9237-HQITU 0 No No 2 Yes \n"","
"""\n"", "" MultipleLines InternetService OnlineSecurity OnlineBackup ... \\\n"", ""0 No phone service DSL No Yes ... \n"", ""1 No DSL Yes No ... \n"", ""2 No DSL Yes Yes ... \n"", ""3 No phone service DSL Yes No"
"... \n"", ""4 No Fiber optic No No ... \n"", ""\n"", "" StreamingTV StreamingMovies Contract PaperlessBilling \\\n"", ""0 No No Month-to-month Yes \n"", ""1 No No One year No \n"", ""2 No No Month-to-month Yes"
"\n"", ""3 No No One year No \n"", ""4 No No Month-to-month Yes \n"", ""\n"", "" PaymentMethod MonthlyCharges TotalCharges Churn gender_Female \\\n"", ""0 Electronic check 29.85 29.85 No 1.0 \n"", ""1"
"Mailed check 56.95 1889.5 No 0.0 \n"", ""2 Mailed check 53.85 108.15 Yes 0.0 \n"", ""3 Bank transfer (automatic) 42.30 1840.75 No 0.0 \n"", ""4 Electronic check 70.70 151.65 Yes 1.0 \n"", ""\n"", """
"gender_Male \n"", ""0 0.0 \n"", ""1 1.0 \n"", ""2 1.0 \n"", ""3 1.0 \n"", ""4 0.0 \n"", ""\n"", ""[5 rows x 22 columns]\n"" ] } ], ""source"": [ ""from sklearn.preprocessing import OneHotEncoder\n"", ""\n"", ""# Step 1: Load your"
"dataset into a DataFrame\n"", ""data = pd.read_csv('telco-customer-churn.csv') # Update with your dataset path\n"", ""\n"", ""# Step 2: Check DataFrame Columns\n"", ""print(\""DataFrame Columns:\"","
"data.columns.tolist())\n"", ""\n"", ""# Step 3: Standardize column names (optional)\n"", ""data.columns = data.columns.str.strip() # Clean up spaces\n"", ""\n"", ""# Step 4: Define categorical columns\n"","
"""categorical_columns = ['gender', 'another_categorical_column'] # Replace with your actual categorical columns\n"", ""\n"", ""# Step 5: Check if categorical columns exist in the DataFrame\n"", ""for col in"
"categorical_columns:\n"", "" if col not in data.columns:\n"", "" print(f\""Warning: Column '{col}' not found in the DataFrame.\"")\n"", ""\n"", ""# Step 6: Encode categorical variables using OneHotEncoder\n"", ""#"
"Use sparse_output instead of sparse\n"", ""encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False) # Set sparse_output=False to return a dense array\n"", ""\n"", ""# Ensure to only fit"
"transform existing categorical columns\n"", ""existing_categorical_columns = [col for col in categorical_columns if col in data.columns]\n"", ""if existing_categorical_columns:\n"", "" encoded_data ="
"pd.DataFrame(encoder.fit_transform(data[existing_categorical_columns]))\n"", ""\n"", "" # Step 7: Create column names for the encoded data\n"", "" encoded_columns ="
"encoder.get_feature_names_out(existing_categorical_columns)\n"", "" encoded_data.columns = encoded_columns\n"", ""\n"", "" # Step 8: Drop original categorical columns from the DataFrame\n"", "" data ="
"data.drop(columns=existing_categorical_columns)\n"", ""\n"", "" # Step 9: Concatenate the original DataFrame with the encoded data\n"", "" data = pd.concat([data, encoded_data], axis=1)\n"", ""\n"", ""# Step"
"10: Check for missing values (optional)\n"", ""print(\""Missing values in the dataset:\\n\"", data.isnull().sum())\n"", ""\n"", ""# Final DataFrame after encoding\n"", ""print(\""Data after encoding:\\n\"", data.head())\n"""
"] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""FRQQxuS0aCUB"" }, ""source"": [ ""**Question 5: State limitations/issues (if any) with the given dataset.**"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"":"
"""_VFVo8CiZpDo"" }, ""source"": [ ""An imbalance in class within the target variable, churn: Problem: The dataset frequently exhibits an unbalanced distribution of churned and non-churned clients."
"Customers who stay are usually significantly more numerous than those who churn. This disparity may result in skewed models that perform poorly on the minority class (churn) but more accurately"
"anticipate the majority class (non-churn). Impact: For the minority class (churners), in particular, it might have an impact on how accurate churn projections are.\n"", ""\n"", ""Existence of Classification"
"Variables: Problem: The dataset contains a large number of categorical characteristics, including InternetService, Contract, and PaymentMethod. For the purpose of machine learning models, these"
"categorical features must be converted into numerical form, which can be complex and requires cautious handling (e.g., one-hot encoding, label encoding). Impact: Inadequate encoding may result in"
"cause loss of information or multicollinearity, which impacts the performance of the model.\n"", ""\n"", ""Possible Redundancy and Limited Variability in Certain Aspects: Problem: Certain features, such as"
"MultipleLines and PhoneService, may have extremely low variability (e.g., the majority of consumers may have phone service). Low variability features may add noise to the model and have minimal"
"impact on churn prediction. Impact: To make the model simpler and easier to understand, some characteristics that aren't as informative might be eliminated.\n"" ] }, { ""cell_type"": ""markdown"","
"""metadata"": { ""id"": ""0gUgxW02t4N_"" }, ""source"": [ ""**Project 2**"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""5jqpsKiq4Kpj"" }, ""source"": [ ""**--> Original Dataset (without SMOTE)**"" ] }, { ""cell_type"":"
"""code"", ""execution_count"": 118, ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Requirement already satisfied: xgboost in /opt/anaconda3/lib/python3.12/site-packages"
"(2.1.2)\n"", ""Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.26.4)\n"", ""Requirement already satisfied: scipy in"
"/opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.13.1)\n"", ""Note: you may need to restart the kernel to use updated packages.\n"" ] } ], ""source"": [ ""pip install xgboost"" ] }, { ""cell_type"":"
"""code"", ""execution_count"": 120, ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Naive Bayes Performance:\n"", ""Accuracy: 0.28253667770941787\n"", ""Precision:"
"0.5911890900332062\n"", ""Recall: 0.28253667770941787\n"", ""F1 Score: 0.16468137850820017\n"", ""------------------------------\n"", ""Logistic Regression Performance:\n"", ""Accuracy:"
"0.7780407004259347\n"", ""Precision: 0.8006882722268639\n"", ""Recall: 0.7780407004259347\n"", ""F1 Score: 0.7854549750770317\n"", ""------------------------------\n"", ""Random Forest Performance:\n"","
"""Accuracy: 0.7856128726928537\n"", ""Precision: 0.7783169024453276\n"", ""Recall: 0.7856128726928537\n"", ""F1 Score: 0.78107021017328\n"", ""------------------------------\n"", ""XGBoost Performance:\n"","
"""Accuracy: 0.7770941788925698\n"", ""Precision: 0.7742691793414791\n"", ""Recall: 0.7770941788925698\n"", ""F1 Score: 0.7755814481692977\n"", ""------------------------------\n"" ] } ], ""source"": [ ""from"
"sklearn.model_selection import train_test_split\n"", ""from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\n"", ""from sklearn.compose import ColumnTransformer\n"", ""from"
"sklearn.impute import SimpleImputer\n"", ""from sklearn.pipeline import Pipeline\n"", ""from sklearn.naive_bayes import GaussianNB\n"", ""from sklearn.linear_model import LogisticRegression\n"", ""from"
"sklearn.ensemble import RandomForestClassifier\n"", ""import xgboost as xgb\n"", ""from imblearn.over_sampling import SMOTE\n"", ""from sklearn.metrics import accuracy_score, precision_score,"
"recall_score, f1_score\n"", ""\n"", ""# Step 1: Load your dataset into a DataFrame\n"", ""data = pd.read_csv('telco-customer-churn.csv') # Update with your dataset path\n"", ""\n"", ""# Step 2: Define your"
"features and target variable\n"", ""X = data.drop('Churn', axis=1) # Replace 'Churn' with your target column\n"", ""y = data['Churn']\n"", ""\n"", ""# Step 3: Encode the target variable\n"", ""label_encoder ="
"LabelEncoder()\n"", ""y = label_encoder.fit_transform(y) # This will convert 'No'/'Yes' to 0/1\n"", ""\n"", ""# Step 4: Define your numeric and categorical features\n"", ""numeric_features ="
"X.select_dtypes(include=['int64', 'float64']).columns.tolist()\n"", ""categorical_features = X.select_dtypes(include=['object']).columns.tolist()\n"", ""\n"", ""# Step 5: Create preprocessing pipelines\n"","
"""numeric_transformer = Pipeline(steps=[\n"", "" ('imputer', SimpleImputer(strategy='mean')),\n"", "" ('scaler', StandardScaler())\n"", ""])\n"", ""\n"", ""categorical_transformer = Pipeline(steps=[\n"", "" ('imputer',"
"SimpleImputer(strategy='constant', fill_value='missing')),\n"", "" ('onehot', OneHotEncoder(handle_unknown='ignore', sparse_output=False))\n"", ""])\n"", ""\n"", ""# Step 6: Combine preprocessing"
"pipelines\n"", ""preprocessor = ColumnTransformer(\n"", "" transformers=[\n"", "" ('num', numeric_transformer, numeric_features),\n"", "" ('cat', categorical_transformer, categorical_features)\n"", "" ])\n"", ""\n"", ""#"
"Step 7: Split data into training and test sets\n"", ""X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)\n"", ""\n"", ""# Step 8: Fit the preprocessor to the training"
"data and transform it\n"", ""X_train_processed = preprocessor.fit_transform(X_train)\n"", ""X_test_processed = preprocessor.transform(X_test)\n"", ""\n"", ""# Step 9: Apply SMOTE to the processed training"
"data\n"", ""smote = SMOTE(random_state=42)\n"", ""X_train_resampled, y_train_resampled = smote.fit_resample(X_train_processed, y_train)\n"", ""\n"", ""# Step 10: Define models\n"", ""models = {\n"", """
"'Naive Bayes': Pipeline(steps=[('classifier', GaussianNB())]),\n"", "" 'Logistic Regression': Pipeline(steps=[('classifier', LogisticRegression(max_iter=1000))]),\n"", "" 'Random Forest': Pipeline(steps="
"[('classifier', RandomForestClassifier(random_state=42))]),\n"", "" 'XGBoost': Pipeline(steps=[('classifier', xgb.XGBClassifier(eval_metric='logloss'))]) # Removed use_label_encoder\n"", ""}\n"", ""\n"", ""# Step"
"11: Train and evaluate models\n"", ""for model_name, model_pipeline in models.items():\n"", "" model_pipeline.fit(X_train_resampled, y_train_resampled)\n"", "" y_pred ="
"model_pipeline.predict(X_test_processed)\n"", "" \n"", "" # Evaluate the model\n"", "" print(f\""{model_name} Performance:\"")\n"", "" print(\""Accuracy:\"", accuracy_score(y_test, y_pred))\n"", "" print(\""Precision:\"","
"precision_score(y_test, y_pred, average='weighted', zero_division=0))\n"", "" print(\""Recall:\"", recall_score(y_test, y_pred, average='weighted', zero_division=0))\n"", "" print(\""F1 Score:\"", f1_score(y_test,"
"y_pred, average='weighted', zero_division=0))\n"", "" print(\""-\"" * 30)\n"" ] }, { ""cell_type"": ""markdown"", ""metadata"": { ""id"": ""IIXcoeQl4QbH"" }, ""source"": [ ""***SMOTE***"" ] }, { ""cell_type"": ""code"","
"""execution_count"": 122, ""metadata"": {}, ""outputs"": [], ""source"": [ ""from imblearn.over_sampling import SMOTE"" ] }, { ""cell_type"": ""code"", ""execution_count"": 124, ""metadata"": {}, ""outputs"": [ { ""name"":"
"""stdout"", ""output_type"": ""stream"", ""text"": [ ""Naive Bayes Performance:\n"", ""Accuracy: 0.5256038647342995\n"", ""Precision: 0.5165923724616147\n"", ""Recall: 0.994280266920877\n"", ""F1 Score:"
"0.6799217731421121\n"", ""------------------------------\n"", ""Logistic Regression Performance:\n"", ""Accuracy: 0.7565217391304347\n"", ""Precision: 0.6825184192900201\n"", ""Recall: 0.9714013346043852\n"","
"""F1 Score: 0.8017309205350118\n"", ""------------------------------\n"", ""Random Forest Performance:\n"", ""Accuracy: 0.866183574879227\n"", ""Precision: 0.9260485651214128\n"", ""Recall:"
"0.7998093422306959\n"", ""F1 Score: 0.858312020460358\n"", ""------------------------------\n"", ""XGBoost Performance:\n"", ""Accuracy: 0.8599033816425121\n"", ""Precision: 0.8821752265861027\n"", ""Recall:"
"0.8350810295519543\n"", ""F1 Score: 0.8579823702252694\n"", ""------------------------------\n"" ] } ], ""source"": [ ""# Step 1: Convert categorical variables to numeric\n"", ""X = pd.get_dummies(X, drop_first=True)"
"# One-hot encoding\n"", ""\n"", ""# Step 2: Scale your features\n"", ""scaler = StandardScaler()\n"", ""X_scaled = scaler.fit_transform(X)\n"", ""\n"", ""# Step 3: Handle missing values\n"", ""imputer ="
"SimpleImputer(strategy='mean') # Use 'median' or 'most_frequent' as needed\n"", ""X_scaled_imputed = imputer.fit_transform(X_scaled)\n"", ""\n"", ""# Check for any remaining missing values\n"", ""if"
"pd.DataFrame(X_scaled_imputed).isnull().sum().sum() > 0:\n"", "" raise ValueError(\""There are still missing values in X_scaled_imputed.\"")\n"", ""\n"", ""# Step 4: Apply SMOTE to handle class"
"imbalance\n"", ""sm = SMOTE(random_state=42)\n"", ""X_res, y_res = sm.fit_resample(X_scaled_imputed, y)\n"", ""\n"", ""# Step 5: Split the dataset into training (80%) and testing (20%)\n"", ""X_train, X_test,"
"y_train, y_test = train_test_split(X_res, y_res, test_size=0.2, random_state=42)\n"", ""\n"", ""# Step 6: Initialize models\n"", ""nb = GaussianNB()\n"", ""lr = LogisticRegression(max_iter=1000)\n"", ""rf ="
"RandomForestClassifier(random_state=42)\n"", ""xgboost = xgb.XGBClassifier(eval_metric='logloss') # Removed use_label_encoder\n"", ""\n"", ""# Step 7: Train models\n"", ""models = [nb, lr, rf, xgboost]\n"","
"""model_names = [\""Naive Bayes\"", \""Logistic Regression\"", \""Random Forest\"", \""XGBoost\""]\n"", ""\n"", ""for model in models:\n"", "" model.fit(X_train, y_train)\n"", ""\n"", ""# Step 8: Make predictions\n"","
"""predictions = {name: model.predict(X_test) for name, model in zip(model_names, models)}\n"", ""\n"", ""# Step 9: Evaluate models\n"", ""def evaluate_model(y_test, y_pred, model_name):\n"", "" print(f\"""
"{model_name} Performance:\"")\n"", "" print(\""Accuracy:\"", accuracy_score(y_test, y_pred))\n"", "" print(\""Precision:\"", precision_score(y_test, y_pred, zero_division=0)) # Avoid division by zero\n"", """
"print(\""Recall:\"", recall_score(y_test, y_pred, zero_division=0)) # Avoid division by zero\n"", "" print(\""F1 Score:\"", f1_score(y_test, y_pred, zero_division=0)) # Avoid division by zero\n"", "" print(\""-\"" * 30) #"
"Separator for clarity\n"", ""\n"", ""# Evaluate each model\n"", ""for name, y_pred in predictions.items():\n"", "" evaluate_model(y_test, y_pred, name)\n"", "" \n"" ] }, { ""cell_type"": ""markdown"", ""metadata"": {},"
"""source"": [ "" ***Model Tuning (Hyperparameters Tuning)***"" ] }, { ""cell_type"": ""code"", ""execution_count"": 126, ""metadata"": { ""colab"": { ""base_uri"": ""https://localhost:8080/"" }, ""id"": ""CTdK6U1pzAe5"","
"""outputId"": ""a215bdf8-c1c2-494f-83d5-a252effebe94"" }, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Starting Random Forest tuning...\n"", ""Fitting 3 folds for each of 10 candidates,"
"totalling 30 fits\n"", ""Random Forest tuning completed.\n"", ""Best parameters for Random Forest:\n"", ""{'n_estimators': 150, 'min_samples_split': 4, 'min_samples_leaf': 3, 'max_depth': 25, 'bootstrap':"
"True}\n"", ""\n"", ""Tuned Random Forest Performance:\n"", ""Accuracy: 0.604\n"", ""Precision: 0.5852842809364549\n"", ""Recall: 0.7028112449799196\n"", ""F1 Score: 0.6386861313868614\n"", ""Starting"
"XGBoost tuning...\n"", ""Fitting 2 folds for each of 10 candidates, totalling 20 fits\n"", ""XGBoost tuning completed.\n"", ""Best parameters for XGBoost:\n"", ""{'subsample': 0.9, 'n_estimators': 150,"
"'max_depth': 4, 'learning_rate': 0.05, 'colsample_bytree': 0.7}\n"", ""\n"", ""Tuned XGBoost Performance:\n"", ""Accuracy: 0.594\n"", ""Precision: 0.5723270440251572\n"", ""Recall: 0.7309236947791165\n"","
"""F1 Score: 0.6419753086419753\n"" ] } ], ""source"": [ ""from sklearn.model_selection import RandomizedSearchCV\n"", ""import xgboost as xgb\n"", ""from sklearn.ensemble import"
"RandomForestClassifier\n"", ""from sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score\n"", ""import numpy as np\n"", ""\n"", ""# Sample evaluate_model function\n"", ""def"
"evaluate_model(y_true, y_pred):\n"", "" print(\""Accuracy:\"", accuracy_score(y_true, y_pred))\n"", "" print(\""Precision:\"", precision_score(y_true, y_pred))\n"", "" print(\""Recall:\"", recall_score(y_true,"
"y_pred))\n"", "" print(\""F1 Score:\"", f1_score(y_true, y_pred))\n"", ""\n"", ""# Example data generation (replace with your actual data)\n"", ""from sklearn.datasets import make_classification\n"", ""X_train, y_train"
